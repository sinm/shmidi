#!/usr/bin/env ruby
require 'shmidi'

if Shmidi::PROFILE
  begin
    require 'perftools'
    PerfTools::CpuProfiler.start 'test.profile'
    at_exit { PerfTools::CpuProfiler.stop }
  rescue LoadError
    $stderr.puts $!
    $stderr.puts "WARN: No profiler found."
  end
end

trap('INT') do
  exit(0)
end

if ARGV.include?('--list')
  Shmidi::Socket.print_device_list
  exit(0)
end

if i = ARGV.index('--dev-channel')
  CH = ARGV[i+1].to_i
else
  $stderr.puts('--dev-channel expected.')
  exit(1)
end

@processor = Shmidi::Processor.new(ARGV[0..3].map{|v|v.to_i})

ARGV[4..-1].each do |arg|
  case arg
  when 'notes_rand'
    @processor.notes_rand(CH, 2)
  when 'notes_off'
    @processor.notes_off(CH)
  when 'notes_blink'
    @processor.notes_blink(CH, 5, 0.05, 0.4)
  when 'learn'
    @controls = {}
    socket = @processor.dev
    socket.on_event(CH) do |event|
      id = event.note
      next if @controls[id]
      control = if [:on, :off].include?(event.message) #TODO: dry! same in event
        Shmidi::RetainButton.new(id, socket, event.channel, event.note)
      elsif event.message == :cc
        Shmidi::Knob.new(id, socket, event.channel, event.note)
      end
      @controls[id] = control
    end
  when 'join'
    @processor.join
  end
end

# TODO: ? channels and notes to indexers under socket!

